#include <stdio.h>
#include <time.h>

void insertionSort(int arr[], int n) {
    int i, key, j;
    for (i = 1; i < n; i++) {
        key = arr[i];
        j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}

int main() {
    int i, n = 5000;
    int arr[n];

    // Preenchendo o vetor com valores aleatórios
    srand(time(NULL));
    for (i = 0; i < n; i++) {
        arr[i] = rand() % 1000;
    }

    // Imprimindo o vetor desordenado
    printf("Vetor desordenado:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    // Ordenando o vetor
    clock_t tInicio = clock();
    insertionSort(arr, n);
    clock_t tFim = clock();

    // Imprimindo o vetor ordenado
    printf("\nVetor ordenado:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    // Imprimindo o tempo de execução
    double tDecorrido = ((double) (tFim - tInicio)) / CLOCKS_PER_SEC;
    printf("\nTempo de execução: %.3lf ms\n", tDecorrido * 1000);

    return 0;
}
